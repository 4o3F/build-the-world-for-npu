plugins {
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '5.1.+'
    id 'wtf.gofancy.fancygradle' version '1.1.+'
    id 'eclipse'
    id 'idea'
}

fancyGradle {
    patches {
        resources
        coremods
    }
}

//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.


version = "2.23.0119"
group = "com.tf.npu" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "BuildTheWorldForNPU"
sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    mappings channel: 'stable', version: '39-1.12'

//    setVersion("1.12.2-14.23.5.2860")
//    version = "1.12.2-14.23.5.2860"
//    runDir = "run"

    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
//    mappings = "snapshot_20171003"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

repositories {
    maven { url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }
}


dependencies {
    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2860'
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"

    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // the 'provided' configuration is for optional dependencies that exist at compile-time but might not at runtime.
    //provided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // the deobf configurations:  'deobfCompile' and 'deobfProvided' are the same as the normal compile and provided,
    // except that these dependencies get remapped to your current MCP mappings
    //deobfCompile 'com.mod-buildcraft:buildcraft:6.0.8:dev'
    //deobfProvided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html
//    deobfCompile 'software.bernie.geckolib:forge-1.12.2-geckolib:3.0.21'
//    deobfProvided 'software.bernie.geckolib:forge-1.12.2-geckolib:3.0.21'
    implementation fg.deobf('software.bernie.geckolib:forge-1.12.2-geckolib:3.0.21')
//    compile 'software.bernie.geckolib:forge-1.12.2-geckolib:3.0.21'

}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

processResources {
    inputs.property "version", "${project.version}"
    inputs.property "mcversion", "1.12.2"
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    filesMatching(['mcmod.info']) {
        expand 'version':"${project.version}", 'mcversion':'1.12.2'
    }
}